# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Reading {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  user: User!
  title: String!
  subtitle: String!
  tags: String!
  status: Status
  currentPage: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Status {
  INPROGRESS
  PAUSED
  COMPLETED
}

type User {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  name: String!
  email: String!
  phone: String!
  isActive: Boolean
  readings: [Reading!]!
}

type LoginResponse {
  user: User!
  accessToken: String!
  refreshToken: String!
}

input readingInput {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  user: userInput!
  title: String!
  subtitle: String!
  tags: String!
  status: Status
  currentPage: Int
}

input userInput {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  name: String!
  email: String!
  phone: String!
  isActive: Boolean
  readings: [readingInput!]!
}

type Query {
  findAllUsers: [User!]!
  findUserById(input: IFindUserInput!): User!
  findAllReadings: [Reading!]!
  findReadingById(input: IFindReadingInput!): Reading!
  whoAmI: User!
}

input IFindUserInput {
  id: String!
}

input IFindReadingInput {
  id: String!
}

type Mutation {
  createUser(input: ICreateUserInput!): User!
  activateUser(input: IActivateUserInput!): User!
  updatePhone(input: IUpdatePhoneInput!): User!
  updateUser(input: IUpdateUserInput!): User!
  deleteUser(input: IDeleteUserInput!): Boolean!
  createReading(input: ICreateReadingInput!): Reading!
  updateReading(input: IUpdateReadingInput!): Reading!
  deleteReading(input: IDeleteReadingInput!): Boolean!
  login(input: LoginInput!): LoginResponse!
  requestRecoveryPassword(input: IRequestRecoveryPasswordInput!): Boolean!
  verifyRecoveryPasswordToken(input: IVerifyRecoveryPasswordTokenInput!): Boolean!
  changePasswordWithRecoveryToken(input: IChangePasswordWithRecoveryTokenInput!): Boolean!
}

input ICreateUserInput {
  name: String!
  email: String!
  phone: String
  password: String!
  isActive: Boolean
}

input IActivateUserInput {
  id: String!
}

input IUpdatePhoneInput {
  email: String!
  phone: String!
}

input IUpdateUserInput {
  name: String
  email: String
  phone: String
  password: String
  isActive: Boolean
  id: String!
}

input IDeleteUserInput {
  id: String!
}

input ICreateReadingInput {
  title: String!
  subtitle: String!
  tags: String
  status: Status
  currentPage: Int
}

input IUpdateReadingInput {
  title: String
  subtitle: String
  tags: String
  status: Status
  currentPage: Int
  id: String!
}

input IDeleteReadingInput {
  id: String!
}

input LoginInput {
  email: String!
  password: String!
}

input IRequestRecoveryPasswordInput {
  email: String!
}

input IVerifyRecoveryPasswordTokenInput {
  token: String!
  email: String!
}

input IChangePasswordWithRecoveryTokenInput {
  email: String!
  password: String!
  recoveryPasswordToken: String!
}